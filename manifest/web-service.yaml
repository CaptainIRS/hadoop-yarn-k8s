apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    error_log /var/log/nginx/error.log debug;
    http {
      server {
        listen 9864;
        server_name .datanode.hadoop.svc.cluster.local;
        location / {
          return 301 /index.html;
        }
        location ~ ^/.+$  {
          client_max_body_size 200M;
          set $subdomain "datanode-0.datanode";
          if ($host ~* "^(.+)\.hadoop\.svc\.cluster\.local*$") {
            set $subdomain $1;
          }
          proxy_pass http://$subdomain:$server_port;

          resolver 127.0.0.1:53 ipv6=off;
        }
      }
      server {
        listen 8042;
        server_name .datanode.hadoop.svc.cluster.local;
        location / {
          return 301 /node;
        }
        location ~ ^/.+$  {
          client_max_body_size 200M;
          set $subdomain "datanode-0.datanode";
          if ($host ~* "^(.+)\.hadoop\.svc\.cluster\.local*$") {
            set $subdomain $1;
          }
          proxy_pass http://$subdomain:$server_port;

          resolver 127.0.0.1:53 ipv6=off;
        }
      }
      server {
        listen 9870;
        server_name namenode.hadoop.svc.cluster.local;
        location / {
          return 301 /index.html;
        }
        location ~ ^/.+$  {
          client_max_body_size 200M;

          proxy_pass http://namenode:$server_port;

          resolver 127.0.0.1:53 ipv6=off;
        }
      }
      server {
        listen 8088;
        server_name resourcemanager.hadoop.svc.cluster.local;
        location / {
          return 301 /nodes;
        }
        location ~ ^/.+$  {
          client_max_body_size 200M;

          proxy_pass http://resourcemanager:$server_port;

          resolver 127.0.0.1:53 ipv6=off;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: web
  replicas: 1
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: nginx
          image: nginx
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
        - name: dnsmasq
          image: "janeczku/go-dnsmasq:release-1.0.5"
          args:
            - --listen
            - "127.0.0.1:53"
            - --default-resolver
            - --append-search-domains
            - --hostsfile=/etc/hosts
            - --verbose
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  type: NodePort
  ports:
    - name: "9864"
      port: 9864
      targetPort: 9864
      nodePort: 9864
    - name: "9870"
      port: 9870
      targetPort: 9870
      nodePort: 9870
    - name: "8020"
      port: 8020
      targetPort: 8020
      nodePort: 8020
    - name: "8042"
      port: 8042
      targetPort: 8042
      nodePort: 8042
    - name: "8088"
      port: 8088
      targetPort: 8088
      nodePort: 8088
  selector:
    app: web
